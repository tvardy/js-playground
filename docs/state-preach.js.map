{
  "version": 3,
  "sources": ["../src/js/store-preach.js", "../src/js/state-preach.js"],
  "sourcesContent": ["import Preach from 'preach'\nimport { nanoid as uuid } from 'nanoid'\n\nimport initialState from './store-initial-state'\nimport { _noop } from './utils/noop'\n\nconst preach = new Preach()\n\n// initial state\nconst _state = {\n  ...initialState\n}\n\n// actions\nconst _actions = {\n  toggle (id) {\n    state.todos = state.todos.map((item) => {\n      if (item.id === id) {\n        item.done = !item.done\n      }\n      return item\n    })\n  },\n  add (text) {\n    state.todos = [{ text, done: false, id: uuid() }, ...state.todos]\n  }\n}\n\nconst StateHandler = {\n  set (obj, prop, value) {\n    obj[prop] = value\n\n    preach.pub('change', obj)\n\n    return true\n  }\n}\n\nconst state = new Proxy(_state, StateHandler)\nconst actions = Object.keys(_actions).reduce((res, key) => {\n  res[key] = (...args) => _actions[key](...args)\n  return res\n}, {})\n\nexport function connect (mapState = _noop, mapActions = _noop) {\n  mapActions(actions)\n\n  preach.sub('change', (s) => mapState(s))\n  preach.pub('change', state)\n}\n", "import { init } from './state-common.js'\nimport * as store from './store-preach.js'\nimport SvelteApp from './components/App.svelte'\n\ninit('Preach', store, SvelteApp)\n"],
  "mappings": "uRAAA,oCAAmB,OAMnB,GAAM,GAAS,GAAI,WAGb,EAAS,KACV,GAIC,EAAW,CACf,OAAQ,EAAI,CACV,EAAM,MAAQ,EAAM,MAAM,IAAI,AAAC,GACzB,GAAK,KAAO,GACd,GAAK,KAAO,CAAC,EAAK,MAEb,KAGX,IAAK,EAAM,CACT,EAAM,MAAQ,CAAC,CAAE,OAAM,KAAM,GAAO,GAAI,KAAU,GAAG,EAAM,SAIzD,EAAe,CACnB,IAAK,EAAK,EAAM,EAAO,CACrB,SAAI,GAAQ,EAEZ,EAAO,IAAI,SAAU,GAEd,KAIL,EAAQ,GAAI,OAAM,EAAQ,GAC1B,EAAU,OAAO,KAAK,GAAU,OAAO,CAAC,EAAK,IACjD,GAAI,GAAO,IAAI,IAAS,EAAS,GAAK,GAAG,GAClC,GACN,IAEI,WAAkB,EAAW,EAAO,EAAa,EAAO,CAC7D,EAAW,GAEX,EAAO,IAAI,SAAU,AAAC,GAAM,EAAS,IACrC,EAAO,IAAI,SAAU,GC5CvB,EAAK,SAAU,EAAO",
  "names": []
}
