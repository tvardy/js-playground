{
  "version": 3,
  "sources": ["../node_modules/lzwcompress/lzwCompress.js", "../src/js/lz-chat_common.js", "../src/js/utils/lzip.js"],
  "sourcesContent": ["/*\n * lzwCompress.js\n *\n * Copyright (c) 2012-2021 floydpink\n * Licensed under the MIT license.\n */\n\n'use strict';\n\n(function () {\n  const root = this;\n\n  const lzwCompress = (function (Array, JSON, undefined) {\n    let _lzwLoggingEnabled = false;\n    const _self = {},\n      _lzwLog = function (message) {\n        try {\n          console.log('lzwCompress: ' +\n            (new Date()).toISOString() + ' : ' + (typeof (message) === 'object' ? JSON.stringify(message) : message));\n        } catch (e) {\n        }\n      };\n\n    // KeyOptimize\n    // http://stackoverflow.com/questions/4433402/replace-keys-json-in-javascript\n    (function (self, Array, JSON) {\n\n      let _keys = [];\n      const comparer = function (key) {\n          return function (e) {\n            return e === key;\n          };\n        },\n        inArray = function (array, comparer) {\n          for (let i = 0; i < array.length; i++) {\n            if (comparer(array[i])) {\n              return true;\n            }\n          }\n          return false;\n        },\n        pushNew = function (array, element, comparer) {\n          if (!inArray(array, comparer)) {\n            array.push(element);\n          }\n        },\n        _extractKeys = function (obj) {\n          if (typeof obj === 'object') {\n            for (let key in obj) {\n              if (!Array.isArray(obj)) {\n                pushNew(_keys, key, comparer(key));\n              }\n              _extractKeys(obj[key]);\n            }\n          }\n        },\n        _encode = function (obj) {\n          if (typeof obj !== 'object') {\n            return obj;\n          }\n          for (let prop in obj) {\n            if (!Array.isArray(obj)) {\n              if (obj.hasOwnProperty(prop)) {\n                obj[_keys.indexOf(prop)] = _encode(obj[prop]);\n                delete obj[prop];\n              }\n            } else {\n              obj[prop] = _encode(obj[prop]);\n            }\n          }\n          return obj;\n        },\n        _decode = function (obj) {\n          if (typeof obj !== 'object') {\n            return obj;\n          }\n          for (let prop in obj) {\n            if (!Array.isArray(obj)) {\n              if (obj.hasOwnProperty(prop) && _keys[prop]) {\n                obj[_keys[prop]] = _decode(obj[prop]);\n                delete obj[prop];\n              }\n            } else {\n              obj[prop] = _decode(obj[prop]);\n            }\n          }\n          return obj;\n        },\n        compress = function (json) {\n          _keys = [];\n          const jsonObj = JSON.parse(json);\n          _extractKeys(jsonObj);\n          _lzwLoggingEnabled && _lzwLog('keys length : ' + _keys.length);\n          _lzwLoggingEnabled && _lzwLog('keys        : ' + _keys);\n          return JSON.stringify({__k : _keys, __v : _encode(jsonObj)});\n        },\n        decompress = function (minifiedJson) {\n          const obj = minifiedJson;\n          if (typeof (obj) !== 'object') {\n            return minifiedJson;\n          }\n          if (!obj.hasOwnProperty('__k')) {\n            return JSON.stringify(obj);\n          }\n          _keys = obj.__k;\n          return _decode(obj.__v);\n        };\n\n      self.KeyOptimize = {\n        pack   : compress,\n        unpack : decompress\n      };\n    }(_self, Array, JSON));\n\n    // LZWCompress\n    // http://stackoverflow.com/a/2252533/218882\n    // http://rosettacode.org/wiki/LZW_compression#JavaScript\n    (function (self, Array) {\n      const compress = function (uncompressed) {\n          if (typeof (uncompressed) !== 'string') {\n            return uncompressed;\n          }\n          let i;\n          const dictionary = Object.create(null);\n          let c,\n            wc,\n            w = '';\n          const result = [];\n          let dictSize = 256;\n          for (i = 0; i < 256; i += 1) {\n            dictionary[String.fromCharCode(i)] = i;\n          }\n          for (i = 0; i < uncompressed.length; i += 1) {\n            c = uncompressed.charAt(i);\n            wc = w + c;\n            if (dictionary[wc]) {\n              w = wc;\n            } else {\n              if (dictionary[w] === undefined) {\n                return uncompressed;\n              }\n              result.push(dictionary[w]);\n              dictionary[wc] = dictSize++;\n              w = String(c);\n            }\n          }\n          if (w !== '') {\n            result.push(dictionary[w]);\n          }\n          return result;\n        },\n        decompress = function (compressed) {\n          if (!Array.isArray(compressed)) {\n            return compressed;\n          }\n          let i;\n          const dictionary = [];\n          let w,\n            result,\n            k,\n            entry = '',\n            dictSize = 256;\n          for (i = 0; i < 256; i += 1) {\n            dictionary[i] = String.fromCharCode(i);\n          }\n          w = String.fromCharCode(compressed[0]);\n          result = w;\n          for (i = 1; i < compressed.length; i += 1) {\n            k = compressed[i];\n            if (dictionary[k]) {\n              entry = dictionary[k];\n            } else {\n              if (k === dictSize) {\n                entry = w + w.charAt(0);\n              } else {\n                return null;\n              }\n            }\n            result += entry;\n            dictionary[dictSize++] = w + entry.charAt(0);\n            w = entry;\n          }\n          return result;\n        };\n\n      self.LZWCompress = {\n        pack   : compress,\n        unpack : decompress\n      };\n    }(_self, Array));\n\n    const _compress = function (obj) {\n        _lzwLoggingEnabled && _lzwLog('original (uncompressed) : ' + obj);\n        if (!obj || obj === true || obj instanceof Date) {\n          return obj;\n        }\n        let result = obj;\n        if (typeof obj === 'object') {\n          result = _self.KeyOptimize.pack(JSON.stringify(obj));\n          _lzwLoggingEnabled && _lzwLog('key optimized: ' + result);\n        }\n        const packedObj = _self.LZWCompress.pack(result);\n        _lzwLoggingEnabled && _lzwLog('packed   (compressed)   : ' + packedObj);\n        return packedObj;\n      },\n      _decompress = function (compressedObj) {\n        _lzwLoggingEnabled && _lzwLog('original (compressed)   : ' + compressedObj);\n        if (!compressedObj || compressedObj === true || compressedObj instanceof Date) {\n          return compressedObj;\n        }\n        let probableJSON, result = _self.LZWCompress.unpack(compressedObj);\n        try {\n          probableJSON = JSON.parse(result);\n        } catch (e) {\n          _lzwLoggingEnabled && _lzwLog('unpacked (uncompressed) : ' + result);\n          return result;\n        }\n        if (typeof probableJSON === 'object') {\n          result = _self.KeyOptimize.unpack(probableJSON);\n        }\n        _lzwLoggingEnabled && _lzwLog('unpacked (uncompressed) : ' + result);\n        return result;\n      },\n      _enableLogging = function (enable) {\n        _lzwLoggingEnabled = enable;\n      };\n\n    return {\n      pack          : _compress,\n      unpack        : _decompress,\n      enableLogging : _enableLogging\n    };\n\n  })(Array, JSON);\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = lzwCompress;\n  } else {\n    root.lzwCompress = lzwCompress;\n  }\n\n}).call(this);\n", "export const constants = {\n  // URL: 'wss://message-broker.up.railway.app/'\n  URL: 'wss://frog01-30247.wykr.es/'\n}\n\nexport const state = {\n  status: 'login',\n  user: {},\n  messages: []\n}\n", "import lzw from 'lzwcompress'\n\nexport const compress = {\n  bits: 32,\n  sep: ':'\n}\n\nexport const pack = (obj) => {\n  return lzw\n    .pack(JSON.stringify(obj))\n    .map((n) => n.toString(compress.bits))\n    .join(compress.sep)\n}\n\nexport const unpack = (str) => {\n  return JSON.parse(\n    lzw.unpack(str.split(compress.sep).map((s) => parseInt(s, compress.bits)))\n  )\n}\n"],
  "mappings": "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",
  "names": ["require_lzwCompress", "__commonJSMin", "exports", "module", "root", "lzwCompress", "Array", "JSON", "undefined", "_lzwLoggingEnabled", "_self", "_lzwLog", "message", "self", "_keys", "comparer", "key", "inArray", "array", "i", "pushNew", "element", "_extractKeys", "obj", "_encode", "prop", "_decode", "compress", "json", "jsonObj", "decompress", "minifiedJson", "uncompressed", "dictionary", "c", "wc", "w", "result", "dictSize", "compressed", "k", "entry", "packedObj", "compressedObj", "probableJSON", "enable", "constants", "state", "import_lzwcompress", "compress", "pack", "obj", "lzw", "n", "unpack", "str", "s"]
}
