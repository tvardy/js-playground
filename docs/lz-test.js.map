{
  "version": 3,
  "sources": ["../node_modules/p-series/index.js", "../node_modules/@78nine/sideworker/sideworker.js", "../src/js/tools/FakeJSONDataWorker.js", "../src/js/tools/CompressionWorker.js", "../src/js/components/lz-test.svelte", "../src/js/lz-test.js"],
  "sourcesContent": ["export default async function pSeries(tasks) {\n\tfor (const task of tasks) {\n\t\tif (typeof task !== 'function') {\n\t\t\tthrow new TypeError(`Expected task to be a \\`Function\\`, received \\`${typeof task}\\``);\n\t\t}\n\t}\n\n\tconst results = [];\n\n\tfor (const task of tasks) {\n\t\tresults.push(await task()); // eslint-disable-line no-await-in-loop\n\t}\n\n\treturn results;\n}\n", "const _uuid = () => URL.createObjectURL(new Blob()).split('/').pop()\n\nfunction SideWorker({ debug, init } = {}, ...args) {\n  const blobStr = insideWorker.toString()\n    .replace(\n      /^\\(?([a-z]+)\\)?\\s*=>\\s*{/,\n      (_, p) => `const ${p}=${debug?1:0};`\n    )\n    .replace(/}$/, '')\n\n  const blobUrl = URL.createObjectURL(new Blob([blobStr], { type: 'text/javascript' }))\n\n  this.worker = new Worker(blobUrl)\n  URL.revokeObjectURL(blobUrl)\n\n  this.func = null\n  this._cb = new Map()\n  this.run = {}\n  this.callFunction = (name, ...args) => {\n    this.worker.postMessage(name)\n    this.worker.postMessage(args)\n  }\n\n  this.define = (name, func) => {\n    this.callFunction('define', name, func.toString())\n    this.run[name] = (...args) => {\n      return new Promise((resolve, reject) => {\n        const uuid = `${name}:${_uuid()}`\n        this._cb.set(uuid, { resolve, reject });\n\n        this.callFunction(uuid, ...args)\n      })\n    }\n  }\n\n  this.worker.addEventListener('message', e => {\n    if (!this.func) {\n      this.func = e.data\n    } else {\n      const [ err, response ] = e.data\n      const handler = this._cb.get(this.func)\n\n      !err ? handler.resolve(response) : handler.reject(err)\n\n      this._cb.delete(this.func);\n      this.func = null\n    }\n  })\n\n  if (init) {\n    this.define('init', init)\n    this.run.init(args)\n  }\n}\n\nexport default SideWorker\n\nconst insideWorker = (debug) => {\n  if (debug) {\n    console.debug('SideWorker initialised.')\n  }\n\n  const ERROR_NOT_DEFINED = 'ERROR! FUNCTION NOT DEFINED!'\n  const SEPARATOR = ':'\n  const _split = arg => arg.split(SEPARATOR)\n  const _join = (...args) => args.join(SEPARATOR)\n\n  function SideWorker() {\n    this.func = false\n    this.define = (name, strfunc) => {\n      const runner = new Function('return ' + strfunc)()\n\n      this[name] = (id, args) => {\n        self.postMessage(_join(name, id))\n\n        try {\n          const response = runner.apply(this, args)\n\n          if (response instanceof Promise) {\n            response.then(final => self.postMessage([, final]))\n          } else {\n            self.postMessage([, response])\n          }\n        } catch (err) {\n          self.postMessage([err])\n        }\n\n        this.func = false\n      }\n    }\n  }\n\n  const worker = new SideWorker()\n\n  self.addEventListener('message', (e) => {\n    if (!worker.func) {\n      worker.func = e.data\n\n      const [ name ] = _split(e.data)\n\n      if (!worker[name]) {\n        console.error(ERROR_NOT_DEFINED, name)\n      }\n    } else {\n      const func = worker.func\n      const [ name, id ] = _split(func)\n\n      worker.func = false\n\n      if (debug) {\n        if(name === 'define') {\n          console.debug(`Defining \"${e.data[0]}\"`)\n        } else {\n          console.debug(`Calling \"${name}\" (id: ${id})`)\n        }\n      }\n\n      if (worker[name]) {\n        const data = (name === 'define' && !id) ? e.data : [id, e.data];\n        worker[name].apply(worker, data)\n      } else {\n        console.error(ERROR_NOT_DEFINED, worker[name])\n      }\n    }\n  })\n}\n", "/* global importScripts, faker */\nimport SideWorker from '@78nine/sideworker'\n\nconst worker = new SideWorker({\n  debug: true,\n  init: () => {\n    importScripts('https://unpkg.com/faker@5.5.3/dist/faker.min.js')\n\n    const { fake, datatype } = faker\n\n    function Record () {\n      return {\n        id: datatype.uuid(),\n        firstName: fake('{{name.firstName}}'),\n        lastName: fake('{{name.lastName}}'),\n        avatarUrl: fake('{{image.avatar}}'),\n        email: fake('{{internet.email}}'),\n        phone: fake('{{phone.phoneNumberFormat}}'),\n        isPremium: datatype.boolean(),\n        list: Array.from(\n          { length: datatype.number({ min: 10, max: 15 }) },\n          ChildRecord\n        )\n      }\n    }\n\n    function ChildRecord () {\n      return {\n        id: datatype.uuid(),\n        title: fake('{{commerce.productName}}'),\n        amount: datatype.number({ min: 10, max: 20 }),\n        created: new Date(fake('{{date.past}}')).toISOString()\n      }\n    }\n\n    self.generate = (length) => Array.from({ length }, Record)\n  }\n})\n\nworker.define('generate', (num) => self.generate(num))\n\nexport default worker\n", "/* global importScripts, lzwCompress, webCompressor */\nimport SideWorker from '@78nine/sideworker'\n\nconst worker = new SideWorker({\n  debug: true,\n  init: () => {\n    importScripts('https://unpkg.com/lzwcompress@1.1.0/lzwCompress.js')\n    importScripts('https://unpkg.com/web-compressor@0.5.1/new.js')\n\n    const WebCompressor = webCompressor\n\n    self.compress = async (type, data) => {\n      const res = await self[type](data)\n      return res.toString()\n    }\n\n    self.b64deflate = new WebCompressor().compress\n    self.b64gzip = new WebCompressor('gzip').compress\n\n    self.utf16deflate = new WebCompressor('deflate', 'utf-16').compress\n    self.utf16gzip = new WebCompressor('gzip', 'utf-16').compress\n\n    const pack = (data) => lzwCompress.pack(JSON.stringify(data))\n    const compress = { bits: 32, sep: ':' }\n\n    self.lzwDec = (data) => pack(data).join(compress.sep)\n    self.lzw32 = (data) =>\n      pack(data)\n        .map((n) => n.toString(compress.bits))\n        .join(compress.sep)\n  }\n})\n\nworker.define('b64deflate', (data) => self.compress('b64deflate', data))\nworker.define('b64gzip', (data) => self.compress('b64gzip', data))\n\nworker.define('utf16deflate', (data) => self.compress('utf16deflate', data))\nworker.define('utf16gzip', (data) => self.compress('utf16gzip', data))\n\nworker.define('lzwDec', (data) => self.lzwDec(data))\nworker.define('lzw32', (data) => self.lzw32(data))\n\nexport default worker\n", "<script>\n  import pSeries from 'p-series'\n  import FakerWorker from '../tools/FakeJSONDataWorker.js'\n  import CompressionWorker from '../tools/CompressionWorker.js'\n\n  let generating = false\n  let compressing = false\n  let ready = false\n  let numberOfRecords = 0\n  let data = null\n\n  const TYPES = [\n    'lzwDec',\n    'lzw32',\n    'b64deflate',\n    'b64gzip',\n    'utf16deflate',\n    'utf16gzip'\n  ]\n  const values = {\n    json: null,\n    jsonPretty: null\n  }\n  const lengths = { json: null }\n  const percentage = {}\n\n  $: ready = data && !generating && !compressing\n\n  function handleKeyDown (e) {\n    if (!e.altKey && !e.ctrlKey && !e.metaKey && !e.shiftKey) {\n      data = null\n    }\n\n    if (e.which === 13) {\n      e.preventDefault()\n      run()\n    }\n  }\n\n  async function run () {\n    numberOfRecords = parseInt(numberOfRecords)\n\n    if (numberOfRecords > 0) {\n      generating = true\n      data = await _generate()\n      generating = false\n\n      values.json = JSON.stringify(data)\n      lengths.json = values.json.length\n      values.jsonPretty = JSON.stringify(data, null, 2)\n\n      compressing = true\n      const packed = await pSeries(_pack())\n      compressing = false\n\n      TYPES.forEach((type, index) => {\n        values[type] = packed[index]\n        lengths[type] = values[type].length\n        percentage[type] = ((lengths[type] / lengths.json) * 100).toFixed(2)\n      })\n    }\n  }\n\n  async function _generate () {\n    return FakerWorker.run.generate(numberOfRecords)\n  }\n\n  function _pack () {\n    return TYPES.map(type => () => CompressionWorker.run[type](values.json))\n  }\n</script>\n\n<div class=\"lz-input\">\n  How many records to create:\n  <span contenteditable on:keydown={handleKeyDown} bind:innerHTML={numberOfRecords}>\n    {numberOfRecords}\n  </span>\n</div>\n\n{#if generating}\n  <pre class=\"lz-result\">creating data...</pre>\n{/if}\n\n{#if compressing}\n  <pre class=\"lz-result\">compressing data...</pre>\n{/if}\n\n{#if ready}\n  <pre\n    class=\"lz-result\">\nNumber of records: { numberOfRecords }\nJSON string length: { lengths.json }\n\n<strong>Compression type results:</strong>\n{#each TYPES as type}\n{ type }: { lengths[type] } ({ percentage[type] } %)<br>\n{/each}\n</pre>\n  <div class=\"lz-data\">\n    <details>\n      <summary>toggle JSON data</summary>\n      <pre>{ values.jsonPretty }</pre>\n    </details>\n  </div>\n  {#each TYPES as type}\n  <div class=\"lz-data wrap\">\n    <details>\n      <summary>{ type }</summary>\n      <pre>{ values[type] }</pre>\n    </details>\n  </div>  \n  {/each}\n{/if}\n", "import { LEVELS, Log } from './tools/Logger.js'\nimport App from './components/lz-test.svelte'\n\nif (process.env.NODE_ENV === 'development') {\n  Log.logLevel = LEVELS.DEBUG\n}\n\nconst app = new App({\n  target: document.getElementById('app'),\n  props: {\n    name: 'world'\n  }\n})\n\nif (app) {\n  Log.debug('Svelte working fine')\n}\n\nexport default app\n"],
  "mappings": "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",
  "names": ["pSeries", "tasks", "task", "results", "_uuid", "SideWorker", "debug", "init", "args", "blobStr", "insideWorker", "_", "p", "blobUrl", "name", "func", "resolve", "reject", "uuid", "e", "err", "response", "handler", "sideworker_default", "ERROR_NOT_DEFINED", "SEPARATOR", "_split", "arg", "_join", "strfunc", "runner", "id", "final", "worker", "data", "worker", "sideworker_default", "fake", "datatype", "Record", "ChildRecord", "length", "num", "FakeJSONDataWorker_default", "worker", "sideworker_default", "WebCompressor", "type", "data", "pack", "compress", "n", "CompressionWorker_default", "insert", "target", "pre", "anchor", "ctx", "i", "pre0", "append", "strong", "div", "details", "summary", "pre1", "set_data", "t3", "t3_value", "t11", "t11_value", "br", "t2", "t2_value", "t4", "t4_value", "create_if_block_2", "create_if_block_1", "create_if_block", "add_render_callback", "span", "generating", "compressing", "ready", "numberOfRecords", "data", "TYPES", "values", "lengths", "percentage", "handleKeyDown", "e", "run", "_generate", "packed", "pSeries", "_pack", "type", "index", "FakeJSONDataWorker_default", "CompressionWorker_default", "$", "$$invalidate", "app", "lz_test_default", "Log"]
}
